name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read  # Para checkout e leitura de arquivos
  issues: write   # Para comentários em PRs

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn clean test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_id }}
          path: |
            target/surefire-reports/
            target/site/jacoco/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true  # Não falha o pipeline se não conseguir comentar
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const testDir = 'target/surefire-reports';
              if (fs.existsSync(testDir)) {
                const files = fs.readdirSync(testDir);
                const xmlFiles = files.filter(f => f.endsWith('.xml'));
            
                let comment = '## 🧪 Test Results\n\n';
                comment += `- **Tests executed:** ${xmlFiles.length} test files\n`;
                const status = '${{ job.status }}' === 'success' ? '✅ All tests passed' : '❌ Some tests failed';
                comment += `- **Status:** ${status}\n`;
                comment += `- **Build:** Successful\n\n`;
                comment += '> Tests are automatically executed on every PR. Make sure all tests pass before merging.';
            
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Could not create test comment:', error.message);
            }

  build:
    name: Build Application
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean compile

      - name: Package application
        run: mvn package -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: java-jar
          path: target/*.jar

  docker:
    name: Docker Build
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub (optional, if pushing)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t calculadora:${{ github.sha }} -t calculadora:latest .
          echo "Build completed successfully."

      - name: Test Docker image
        run: |
          echo "=== Docker Images Built ==="
          docker images | grep calculadora

      - name: Save Docker image
        run: |
          echo "Saving image..."
          docker save calculadora:latest > docker-image.tar
          ls -la docker-image.tar  # Log para debug

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-image
          path: docker-image.tar

  notify:
    name: Notifications
    runs-on: ubuntu-latest
    needs: [test, build, docker]  # Removido deploy
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Discord Notification
        uses: Sniddl/discord-commits@v1.6
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: "avatar-with-link"
          include-extras: true

      - name: Notify test results
        if: always()
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const jobResults = {
              test: '${{ needs.test.result }}',
              build: '${{ needs.build.result }}',
              docker: '${{ needs.docker.result }}'
            };
            
            const status = Object.values(jobResults).every(result => result === 'success') 
              ? '✅ SUCCESS' 
              : '❌ FAILED';
            
            console.log(`Pipeline Status: ${status}`);
            console.log('Job Results:', jobResults);